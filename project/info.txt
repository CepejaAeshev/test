1)вложенные теги:
<ul>
		<li><p>пункт 1</p></li>
		<li>пункт 2</li>
		<li>пункт 3</li>
		<li>пункт 4</li>
		<li>пункт 5</li>
</ul>
ul - родитель 
li - потомок 
теги которые вложены в тег называют потомками, а куда вложенны родителями, 
теги находящиеся на одном уровне - сосдями
li - потомок 1 уровня для ul
p - просто потомок для ul

Абсолютный и относительный путь:
1)<img src= "/img/название" alt = "абсолютный путь">
2)<img src= "./img/название" alt = "относительный путь">
абсолютный путь - идет от корня, то есть корень папка project ищем папку img и название файла
относительный путь - идет от файла index.html - если у нас файл будет находится в другой вложенной папке, то надо оттуда выйти с помощью ../img/название 
CSS:
ПРАВИЛА СТИЛИЗАЦИИ:
P - СЕЛЕКТОР (селектор тегов)
P{
	COLOR- СВОЙСТВО: RED - ЗНАЧЕНИЕ; ЗДЕСЬ В ДОМ ДЕРЕВЕ БУДУТ ИСКАТЬ ТЕГ P И УСТАНАВЛИВАТЬ КРАСНЫЙ ЦВЕТ ЕМУ 
}
Можно вставлять специальные директивы:
@font-face{свойства шрифта} – подключение сторонних шрифтов;
@import(url файла) – подключение сторонних стилей;
@media(параметры) – указание медиа-носителя.
работа с цветом на сss:
1)с помощью # цифры в 16 ричной системе 
2)с помощью rgba(2цифры,2 цифры, последнняя это прозрачность)
атрибуты, теги:
1)селетор тега:
достаточно выбрать тег какой- то 
P{
	инфа
}
2)селектор id:
достаточно выбрать id, ну сначала написать #
#unqid{
	инфа
}
3)селектор класса:
достаточно написать имя класса и поставить точку перед:
.class-name{
	инфа
}
4)селектор атрибута:
пишем атрибут в квадратных скобках:
[href]{
	инфа
}
или 
[href="/flower.jpg"]{
	инфа
}
или 
[href^="/flower"] - атрибут начинается со слова flower (^=)
или [href$="/flower"] - атрибут заканчивается на это слово
или [href*="flower"] - атрибут, где слово встречается где угодно 
или [href|="flower"] - атрибут, где цепочка начинается на flower,например class = "flower-name-space" - тогда он выберется
Вес селекторов, порядок изменения:
id (100 - вес)	[href], .class, :hover-псевдоселекторы(10)	div(теги)	after - селекторы псевдоэлементов	+^~ - 
универсальные селекторы - селекторы с наименьшим весом
пример 
#unqid-id{
	color:red;
}
#unqid-id{
	color:blue; цвет покрасится в синий, так как вес одинаковый и селектор находится ниже 
}
.block{
	color:green; вес ниже чем у #unqid-id, значит цвет так и будет синий 
}
!!!!!ПРИ КОМБИНИРОВАНИИ СЕЛЕКТОРОВ ВЕС СКЛАДЫВАЕТСЯ 
Актуально когда мы у одного блока хотим стилизовать, одинаковые свойства, если свойства разные, 
то будут применяться они даже у блоков меньщшего веса
перебить стили:
1)!important - команда, которая делает вес больше 
#unqid-id{
	color:blue; цвет покрасится в синий, так как вес одинаковый и селектор находится ниже 
}
.block{
	color:green !important; вес ниже чем у #unqid-id, значит цвет так и будет синий 
}
выведет зеленый цвет
2)<div style="color: orange" id="unqid-id" class="block"></div>
#unqid-id{
	color:blue; цвет покрасится в синий, так как вес одинаковый и селектор находится ниже 
}
.block{
	color:green; вес ниже чем у #unqid-id, значит цвет так и будет синий 
}
перебили с помощью атрибута style, но !important перебивает


Селекторы состояния(псевдоклассы):
https://www.w3schools.com/cssref/css_selectors.asp). 
необходимы для более качественных стили в движении(например при нажатии или при на введении)
обычно обозначаются через :
примеры:
1).button:hover{
	color:green; при на введении будет перекрашен в зеленый
}
2).button: active{
	color:blue;
	при нажатии будет покрашен в голубой
}
3)<a href="#block">Переход по якорю</a>
	<p id="block">
       Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque laboriosam optio a impedit provident quae facere dolorum, quaerat quisquam incidunt recusandae ullam vero dolor tempore. Eos facere unde laborum nemo?
   </p>
	p:target {
   background: green; при якорной ссылке, когда нажимаем цвет подсвечивается
}
4)a:visited {
   color: green;
} 
при нажатии на ссылку и возврат обратно на страницу цвет поменяется 
5).text-input:focus {
   background: yellow;
}
<input type="text" class="text-input">
закрашивает плашку в цвет
6).text-input:disabled {
   background: magenta;
} 
закрашивает плашку и закрывает доступ к писанию
7)<span class="span">Да</span>
.check:checked + .span {
   color: red;
}
при нажатии галочки в checkbox , слово меняет цвет например
8)	<li>1</li>
   <li>2</li>
   <li>3</li>
   <li>4</li>
	li:first-child {
   color: red; выделяется цветом только первая строчка, где li потомок первого уровня
	}
9)li:last-child {
   color: red;
}
аналогично только с последним
10)li:nth-child(5) {
   color: red;
}
с помощью этого псевдоселектора выделяется только 5 строка
11)li:nth-child(even) {
   color: red;
}
тут только четные 
12)li:nth-child(2n + 3) {
   color: red;
}
при подставлении в формулу натуральных чисел от 0 до бесконечности положительных целых, будут выделяться эти строки
13)li:not(.active) {
   color: red;
}
выделяться все строки кроме класса active
https://www.w3schools.com/cssref/css_selectors.asp. ссылка на множества псевдоселекторов

ПСЕВДОЭЛЕМЕНТЫ:
1).block:before {
   content: "до";
}
слово да вставляется до слова в классе block
 
.block:after {
   content: "после";
}
слово да вставляется после слова в классе block
Чаще всего псевдоэлементы :before и :after используются в декоративных целях, чтобы привести верстку в соответствие с макетом
